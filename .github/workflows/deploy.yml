name: CD

# Run this workflow when compile is successful
on:
  workflow_dispatch:

# This ensures that no matter what triggers this workflow (a push, a manual trigger, etc.),
# only one instance of it will ever run at a time across your entire repository.
concurrency:
  # Use the workflow's name as the unique lock.
  # All runs of this workflow will share the same concurrency group.
  group: ${{ github.workflow }}
  # If a new run is triggered, wait for the existing one to finish.
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup cross-platform build
        run: docker buildx create --name multiarch --use
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and deploy image
        run: docker buildx build --platform linux/amd64 -t rfledesma/blog:$(cat VERSION | xargs) -t rfledesma/blog:latest --push .

  trigger-release:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Trigger release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GIT_HUB_WORKFLOW_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'release.yml',
              ref: 'master'
            })
