.cache
.kdev4
build
resources
.git
.idea

# --- Version Control ---
# Never copy the git repository history and configuration into the image.
# Docker has some built-in exclusions, but it's best to be explicit.
.git/
.gitignore
.gitattributes
.gitmodules

# --- CMake Build Artifacts ---
# This is the most important section. Exclude all build output directories
# and generated files. We want to perform a clean build inside the container.

# Common build directory names
build/
build-*/
_build/
out/
bin/

# CMake generated files and directories
CMakeCache.txt
CMakeFiles/
cmake_install.cmake
CTestTestfile.cmake
compile_commands.json
Makefile

# Compiled object files, libraries, and executables if not in a build dir
*.o
*.obj
*.a
*.so
*.so.*
*.la
*.dylib
*.dll

# --- IDE and Editor Configuration ---
# Exclude configurations for popular editors to prevent cache busting.
.vscode/
.idea/
*.sublime-project
*.sublime-workspace
*.creator.user
*.creator

# --- OS-specific and Temporary Files ---
# Common files generated by macOS, Windows, and Linux editors.
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary/backup files
*~
*.swp
*.swo

# --- Dependency Management ---
# Exclude local dependency manager caches or downloaded packages.
# These should be fetched/installed during the Docker build process.
vcpkg/
vcpkg_installed/
conan/
.conan/
deps/
dependencies/
vendor/

# --- Testing and Code Coverage ---
# Exclude test reports and coverage data.
coverage/
*.gcno
*.gcda
*.gcov
lcov_report/

# --- Documentation ---
# Exclude generated documentation. The source (e.g., Doxyfile) should be kept.
docs/html/
docs/latex/
doxygen_output/

# --- Secrets and Environment Variables ---
# CRITICAL: Never include secrets in your Docker image.
.env
*.env
*.pem
*.key
credentials.json